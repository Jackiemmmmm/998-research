{
  "timestamp": "2025-09-07T14:50:39.946518",
  "total_tests": 18,
  "pattern_performance": {
    "ReAct": {
      "pattern": "ReAct",
      "total_tests": 6,
      "success_rate": 1.0,
      "avg_latency": 3.2181658347447715,
      "min_latency": 0.6180739402770996,
      "max_latency": 7.5795979499816895,
      "avg_response_length": 1448.1666666666667,
      "total_steps": 0,
      "total_decisions": 0,
      "total_tool_calls": 2
    },
    "State-based": {
      "pattern": "State-based",
      "total_tests": 6,
      "success_rate": 0.8333333333333334,
      "avg_latency": 6.897977018356324,
      "min_latency": 3.5364909172058105,
      "max_latency": 9.524102926254272,
      "avg_response_length": 1978.8,
      "total_steps": 0,
      "total_decisions": 15,
      "total_tool_calls": 0
    },
    "Sequential": {
      "pattern": "Sequential",
      "total_tests": 6,
      "success_rate": 1.0,
      "avg_latency": 17.450788299242657,
      "min_latency": 11.941312074661255,
      "max_latency": 30.60139012336731,
      "avg_response_length": 7861.833333333333,
      "total_steps": 12,
      "total_decisions": 0,
      "total_tool_calls": 0
    }
  },
  "ranking": [
    {
      "pattern": "ReAct",
      "score": 80.69
    },
    {
      "pattern": "Sequential",
      "score": 66.0
    },
    {
      "pattern": "State-based",
      "score": 63.33
    }
  ],
  "complexity_analysis": {
    "simple": {
      "avg_latency_by_pattern": {
        "ReAct": 1.161650538444519,
        "State-based": 3.6219035387039185,
        "Sequential": 12.61964201927185
      }
    },
    "medium": {
      "avg_latency_by_pattern": {
        "ReAct": 3.972288489341736,
        "State-based": 8.860987544059753,
        "Sequential": 16.008805513381958
      }
    },
    "complex": {
      "avg_latency_by_pattern": {
        "ReAct": 4.520558476448059,
        "State-based": 9.524102926254272,
        "Sequential": 23.723917365074158
      }
    }
  },
  "raw_results": [
    {
      "pattern": "ReAct",
      "query": "What's today's date?",
      "complexity": "simple",
      "start_time": 1757220299.235231,
      "end_time": 1757220300.940458,
      "latency": 1.7052271366119385,
      "response_length": 20,
      "success": true,
      "error_message": null,
      "steps_count": 0,
      "decision_points": 0,
      "tool_calls": 1
    },
    {
      "pattern": "Sequential",
      "query": "What's today's date?",
      "complexity": "simple",
      "start_time": 1757220300.94057,
      "end_time": 1757220312.8818822,
      "latency": 11.941312074661255,
      "response_length": 5736,
      "success": true,
      "error_message": null,
      "steps_count": 2,
      "decision_points": 0,
      "tool_calls": 0
    },
    {
      "pattern": "State-based",
      "query": "What's today's date?",
      "complexity": "simple",
      "start_time": 1757220312.882006,
      "end_time": 1757220316.589322,
      "latency": 3.7073161602020264,
      "response_length": 960,
      "success": true,
      "error_message": null,
      "steps_count": 0,
      "decision_points": 3,
      "tool_calls": 0
    },
    {
      "pattern": "ReAct",
      "query": "Hello, how are you?",
      "complexity": "simple",
      "start_time": 1757220316.589442,
      "end_time": 1757220317.207516,
      "latency": 0.6180739402770996,
      "response_length": 64,
      "success": true,
      "error_message": null,
      "steps_count": 0,
      "decision_points": 0,
      "tool_calls": 0
    },
    {
      "pattern": "Sequential",
      "query": "Hello, how are you?",
      "complexity": "simple",
      "start_time": 1757220317.207693,
      "end_time": 1757220330.505665,
      "latency": 13.297971963882446,
      "response_length": 6049,
      "success": true,
      "error_message": null,
      "steps_count": 2,
      "decision_points": 0,
      "tool_calls": 0
    },
    {
      "pattern": "State-based",
      "query": "Hello, how are you?",
      "complexity": "simple",
      "start_time": 1757220330.5057862,
      "end_time": 1757220334.042277,
      "latency": 3.5364909172058105,
      "response_length": 772,
      "success": true,
      "error_message": null,
      "steps_count": 0,
      "decision_points": 3,
      "tool_calls": 0
    },
    {
      "pattern": "ReAct",
      "query": "Compare Python and JavaScript for web development",
      "complexity": "medium",
      "start_time": 1757220334.042433,
      "end_time": 1757220338.790169,
      "latency": 4.747735977172852,
      "response_length": 715,
      "success": true,
      "error_message": null,
      "steps_count": 0,
      "decision_points": 0,
      "tool_calls": 1
    },
    {
      "pattern": "Sequential",
      "query": "Compare Python and JavaScript for web development",
      "complexity": "medium",
      "start_time": 1757220338.7902699,
      "end_time": 1757220358.119683,
      "latency": 19.329413175582886,
      "response_length": 9410,
      "success": true,
      "error_message": null,
      "steps_count": 2,
      "decision_points": 0,
      "tool_calls": 0
    },
    {
      "pattern": "State-based",
      "query": "Compare Python and JavaScript for web development",
      "complexity": "medium",
      "start_time": 1757220358.119785,
      "end_time": 1757220366.8380852,
      "latency": 8.718300104141235,
      "response_length": 2184,
      "success": true,
      "error_message": null,
      "steps_count": 0,
      "decision_points": 3,
      "tool_calls": 0
    },
    {
      "pattern": "ReAct",
      "query": "Explain the concept of machine learning and give examples",
      "complexity": "medium",
      "start_time": 1757220366.838125,
      "end_time": 1757220370.034966,
      "latency": 3.19684100151062,
      "response_length": 2516,
      "success": true,
      "error_message": null,
      "steps_count": 0,
      "decision_points": 0,
      "tool_calls": 0
    },
    {
      "pattern": "Sequential",
      "query": "Explain the concept of machine learning and give examples",
      "complexity": "medium",
      "start_time": 1757220370.035001,
      "end_time": 1757220382.723199,
      "latency": 12.68819785118103,
      "response_length": 6158,
      "success": true,
      "error_message": null,
      "steps_count": 2,
      "decision_points": 0,
      "tool_calls": 0
    },
    {
      "pattern": "State-based",
      "query": "Explain the concept of machine learning and give examples",
      "complexity": "medium",
      "start_time": 1757220382.7233121,
      "end_time": 1757220391.7269871,
      "latency": 9.003674983978271,
      "response_length": 3153,
      "success": true,
      "error_message": null,
      "steps_count": 0,
      "decision_points": 3,
      "tool_calls": 0
    },
    {
      "pattern": "ReAct",
      "query": "Design a scalable microservices architecture for an e-commerce platform with authentication, payments, and real-time notifications",
      "complexity": "complex",
      "start_time": 1757220391.727032,
      "end_time": 1757220399.30663,
      "latency": 7.5795979499816895,
      "response_length": 4729,
      "success": true,
      "error_message": null,
      "steps_count": 0,
      "decision_points": 0,
      "tool_calls": 0
    },
    {
      "pattern": "Sequential",
      "query": "Design a scalable microservices architecture for an e-commerce platform with authentication, payments, and real-time notifications",
      "complexity": "complex",
      "start_time": 1757220399.306679,
      "end_time": 1757220429.9080691,
      "latency": 30.60139012336731,
      "response_length": 15418,
      "success": true,
      "error_message": null,
      "steps_count": 2,
      "decision_points": 0,
      "tool_calls": 0
    },
    {
      "pattern": "State-based",
      "query": "Design a scalable microservices architecture for an e-commerce platform with authentication, payments, and real-time notifications",
      "complexity": "complex",
      "start_time": 1757220429.908236,
      "end_time": 1757220612.11241,
      "latency": 182.20417404174805,
      "response_length": 0,
      "success": false,
      "error_message": "Recursion limit of 25 reached without hitting a stop condition. You can increase the limit by setting the `recursion_limit` config key.\nFor troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/GRAPH_RECURSION_LIMIT",
      "steps_count": 0,
      "decision_points": 0,
      "tool_calls": 0
    },
    {
      "pattern": "ReAct",
      "query": "Create a comprehensive business plan for a sustainable energy startup including market analysis, financial projections, and risk assessment",
      "complexity": "complex",
      "start_time": 1757220612.112688,
      "end_time": 1757220613.574207,
      "latency": 1.4615190029144287,
      "response_length": 645,
      "success": true,
      "error_message": null,
      "steps_count": 0,
      "decision_points": 0,
      "tool_calls": 0
    },
    {
      "pattern": "Sequential",
      "query": "Create a comprehensive business plan for a sustainable energy startup including market analysis, financial projections, and risk assessment",
      "complexity": "complex",
      "start_time": 1757220613.5742972,
      "end_time": 1757220630.4207418,
      "latency": 16.846444606781006,
      "response_length": 4400,
      "success": true,
      "error_message": null,
      "steps_count": 2,
      "decision_points": 0,
      "tool_calls": 0
    },
    {
      "pattern": "State-based",
      "query": "Create a comprehensive business plan for a sustainable energy startup including market analysis, financial projections, and risk assessment",
      "complexity": "complex",
      "start_time": 1757220630.420869,
      "end_time": 1757220639.944972,
      "latency": 9.524102926254272,
      "response_length": 2825,
      "success": true,
      "error_message": null,
      "steps_count": 0,
      "decision_points": 3,
      "tool_calls": 0
    }
  ],
  "summary": {
    "overall_winner": "ReAct (综合评分: PatternPerformance(pattern='ReAct', total_tests=6, success_rate=1.0, avg_latency=3.2181658347447715, min_latency=0.6180739402770996, max_latency=7.5795979499816895, avg_response_length=1448.1666666666667, total_steps=0, total_decisions=0, total_tool_calls=2)分)",
    "fastest_pattern": "ReAct",
    "most_reliable": "ReAct",
    "most_detailed": "Sequential",
    "recommendations": {
      "simple_tasks": "ReAct - 适合快速响应的简单查询",
      "medium_tasks": "Sequential - 适合需要系统化处理的中等复杂任务",
      "complex_tasks": "State-based - 适合需要智能决策的复杂任务"
    }
  }
}