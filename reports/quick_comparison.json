{
  "timestamp": "2025-09-08T10:38:25.685737",
  "total_tests": 6,
  "pattern_performance": {
    "Sequential": {
      "pattern": "Sequential",
      "total_tests": 3,
      "success_rate": 0.3333333333333333,
      "avg_latency": 33.640222787857056,
      "min_latency": 33.640222787857056,
      "max_latency": 33.640222787857056,
      "avg_response_length": 6441.0,
      "total_steps": 1,
      "total_decisions": 0,
      "total_tool_calls": 1
    },
    "ReAct": {
      "pattern": "ReAct",
      "total_tests": 3,
      "success_rate": 1.0,
      "avg_latency": 26.112130403518677,
      "min_latency": 1.8964402675628662,
      "max_latency": 68.2451400756836,
      "avg_response_length": 2205.0,
      "total_steps": 0,
      "total_decisions": 0,
      "total_tool_calls": 2
    }
  },
  "ranking": [
    {
      "pattern": "ReAct",
      "score": 66.2
    },
    {
      "pattern": "Sequential",
      "score": 47.11
    }
  ],
  "complexity_analysis": {
    "simple": {
      "avg_latency_by_pattern": {
        "ReAct": 1.8964402675628662
      }
    },
    "medium": {
      "avg_latency_by_pattern": {
        "ReAct": 68.2451400756836
      }
    },
    "complex": {
      "avg_latency_by_pattern": {
        "Sequential": 33.640222787857056,
        "ReAct": 8.19481086730957
      }
    }
  },
  "raw_results": [
    {
      "pattern": "ReAct",
      "query": "What's today's date?",
      "complexity": "simple",
      "start_time": 1757291700.3382468,
      "end_time": 1757291702.234687,
      "latency": 1.8964402675628662,
      "response_length": 27,
      "success": true,
      "error_message": null,
      "steps_count": 0,
      "decision_points": 0,
      "tool_calls": 1
    },
    {
      "pattern": "Sequential",
      "query": "What's today's date?",
      "complexity": "simple",
      "start_time": 1757291702.234829,
      "end_time": 1757291722.0206962,
      "latency": 19.78586721420288,
      "response_length": 0,
      "success": false,
      "error_message": "Recursion limit of 25 reached without hitting a stop condition. You can increase the limit by setting the `recursion_limit` config key.\nFor troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/GRAPH_RECURSION_LIMIT",
      "steps_count": 0,
      "decision_points": 0,
      "tool_calls": 0
    },
    {
      "pattern": "ReAct",
      "query": "Compare Python and JavaScript for web development",
      "complexity": "medium",
      "start_time": 1757291722.020751,
      "end_time": 1757291790.265891,
      "latency": 68.2451400756836,
      "response_length": 724,
      "success": true,
      "error_message": null,
      "steps_count": 0,
      "decision_points": 0,
      "tool_calls": 1
    },
    {
      "pattern": "Sequential",
      "query": "Compare Python and JavaScript for web development",
      "complexity": "medium",
      "start_time": 1757291790.266062,
      "end_time": 1757291863.848298,
      "latency": 73.58223605155945,
      "response_length": 0,
      "success": false,
      "error_message": "Recursion limit of 25 reached without hitting a stop condition. You can increase the limit by setting the `recursion_limit` config key.\nFor troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/GRAPH_RECURSION_LIMIT",
      "steps_count": 0,
      "decision_points": 0,
      "tool_calls": 0
    },
    {
      "pattern": "ReAct",
      "query": "Design a scalable microservices architecture for an e-commerce platform with authentication, payments, and real-time notifications",
      "complexity": "complex",
      "start_time": 1757291863.8485591,
      "end_time": 1757291872.04337,
      "latency": 8.19481086730957,
      "response_length": 5864,
      "success": true,
      "error_message": null,
      "steps_count": 0,
      "decision_points": 0,
      "tool_calls": 0
    },
    {
      "pattern": "Sequential",
      "query": "Design a scalable microservices architecture for an e-commerce platform with authentication, payments, and real-time notifications",
      "complexity": "complex",
      "start_time": 1757291872.043463,
      "end_time": 1757291905.6836858,
      "latency": 33.640222787857056,
      "response_length": 6441,
      "success": true,
      "error_message": null,
      "steps_count": 1,
      "decision_points": 0,
      "tool_calls": 1
    }
  ],
  "summary": {
    "overall_winner": "ReAct (综合评分: PatternPerformance(pattern='ReAct', total_tests=3, success_rate=1.0, avg_latency=26.112130403518677, min_latency=1.8964402675628662, max_latency=68.2451400756836, avg_response_length=2205.0, total_steps=0, total_decisions=0, total_tool_calls=2)分)",
    "fastest_pattern": "ReAct",
    "most_reliable": "ReAct",
    "most_detailed": "Sequential",
    "recommendations": {
      "simple_tasks": "ReAct - 适合快速响应的简单查询",
      "medium_tasks": "Sequential - 适合需要系统化处理的中等复杂任务",
      "complex_tasks": "State-based - 适合需要智能决策的复杂任务"
    }
  }
}